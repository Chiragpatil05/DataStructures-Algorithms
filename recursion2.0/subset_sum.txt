void findSubsetSum(vector<int> &arr , int n , int index , vector<int> &temp , vector<int> &sum){
        if(index == n){
            int val = 0;
            for(int i=0 ; i<temp.size() ; i++){
                val = val +  temp[i];
            }
            sum.push_back(val);
            return;
        }
        
        // exlude
        findSubsetSum(arr , n , index+1 , temp , sum);
        
        //include
        temp.push_back(arr[index]);
        findSubsetSum(arr , n , index+1 , temp , sum);
        temp.pop_back();
    }
  
    void findSubsetSum2(vector<int> &arr , int n , int index , int sum , vector<int> &ans){
        if(index == n){
            ans.push_back(sum);
            return;
        }
        
        // exlcude
        findSubsetSum2(arr , n , index+1 , sum , ans);
        
        // incude
        findSubsetSum2(arr , n , index+1 , sum+arr[index] , ans);
    }
  
    vector<int> subsetSums(vector<int> arr, int n) {
        // vector<int> temp;
        // vector<int> sum;
        int index = 0;
        vector<int> ans;
        int sum = 0;
        
        // findSubsetSum(arr , n , index ,  temp , sum);
        findSubsetSum2(arr , n , index , sum , ans);
        return ans;
    }